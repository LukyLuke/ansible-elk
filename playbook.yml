---

- name: Rsyslog
  hosts: proxy
  become: yes
  gather_facts: no
  roles:
    - role: robertdebock.rsyslog
  vars:
    rsyslog_config_file_format: advanced
    rsyslog_receiver: yes
    rsyslog_remote: "127.0.0.1"
    rsyslog_remote_port: 1514
    rsyslog_remote_tcp: no
    rsyslog_remote_template: json_output
    rsyslog_rsyslog_d_files:
      01-json_output:
        content: |
          # See https://rsyslog.readthedocs.io/en/latest/configuration/index.html
          template(name="json_output" type="list" option.json="on") {
            constant(value="{")
            constant(value="\"@timestamp\":\"")     property(name="timereported" dateFormat="rfc3339")
            constant(value="\",\"@version\":\"1")
            constant(value="\",\"tag\":\"")         property(name="syslogtag")
            constant(value="\",\"relayhost\":\"")   property(name="fromhost")
            constant(value="\",\"relayip\":\"")     property(name="fromhost-ip")
            constant(value="\",\"logsource\":\"")   property(name="source")
            constant(value="\",\"host\":\"")        property(name="hostname" caseconversion="lower")
            constant(value="\",\"severity\":\"")    property(name="syslogseverity")
            constant(value="\",\"facility\":\"")    property(name="syslogfacility")
            constant(value="\",\"priority\":\"")    property(name="pri")
            constant(value="\",\"severity_label\":\"")    property(name="syslogseverity-text")
            constant(value="\",\"facility_label\":\"")    property(name="syslogfacility-text")
            constant(value="\",\"priority_label\":\"")    property(name="pri-text")
            constant(value="\",\"programname\":\"") property(name="programname")
            constant(value="\",\"procid\":\"")      property(name="procid")
            constant(value="\",\"message\":\"")     property(name="msg")
            constant(value="\"}\n")
          }
  tags:
    - syslog
    - config


- name: Elasicsearch
  hosts: elastic
  become: yes
  gather_facts: no
  roles:
    - role: elasticsearch
    - role: config-elasticsearch
    - role: system-elasticsearch
  vars:
    elasticsearch_version: "7.16.3"
    elasticsearch_cluster_name: "elk-cluster"
    elasticsearch_node_name: "node-01"
    elasticsearch_discovery_hosts:
      - "127.0.0.1"
    elasticsearch_cluster_initial_nodes:
      - "node-01"
  tags:
    - elastic


- name: Logstash
  hosts: logstash
  become: yes
  gather_facts: no
  roles:
    - role: logstash
  vars:
    logstash_version: "7.16.3"
    logstash_name: "Logstash"
#    logstash_elastic_cloud: {
#      id: "id:bas64",
#      auth: "user:pass"
#    }
    logstash_elasticsearch_hosts:
      - { host: "127.0.0.1", port: "9200" }
    logstash_syslog: { port: 1514, host: "127.0.0.1" }
    logstash_beats: { port: 5044, host: "0.0.0.0" }
  tags:
    - logstash


- name: Kibana
  hosts: kibana
  become: yes
  gather_facts: no
  roles:
    - role: kibana
  vars:
    kibana_version: "7.16.3"
    kibana_log_queries: false
    kibana_log_quiet: true
    kibana_elasticsearch_hosts:
      - "http://localhost:9200"
  tags:
    - kibana


#- name: Metricbeat
#  hosts: elastic
#  become: yes
#  gather_facts: no
#  roles:
#    - role: elastic-metricbeat
#  vars:
#    metricbeat_for_elasticsearch: true
#    metricbeat_for_logstash: true
#    metricbeat_elasticsearch_hosts:
#      - { host: "localhost", port: 9200 }
#  tags:
#    - metric

- name: ReverseProxy
  hosts: proxy
  become: yes
  gather_facts: yes
  roles:
    - role: hispanico.nginx_revproxy
  vars:
    nginx_revproxy_sites:
      nginx_revproxy_certbot_auto: false
      default:
        ssl: false
        letsencrypt: false

      kibana:
        domains:
          - kibana
          - kibana.local
        upstreams:
          - { backend_address: 127.0.0.1, backend_port: 5601 }
        ssl: true
        letsencrypt: false
      logstash:
        domains:
          - 192.168.246.10
          - logstash
          - logstash.local
        upstreams:
          - { backend_address: 127.0.0.1, backend_port: 9600 }
        ssl: true
        letsencrypt: false
      elastic:
        domains:
          - elastic
          - elastic.local
        upstreams:
          - { backend_address: 127.0.0.1, backend_port: 9200 }
        ssl: true
        letsencrypt: false
  tags:
    - proxy
